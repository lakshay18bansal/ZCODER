{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LAKSHAY\\\\Downloads\\\\ZCODER\\\\frontend\\\\src\\\\components\\\\editor\\\\Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { fetchQuestions } from '../../utils/questions';\nimport { Play, Download, Copy, Sun, Moon, Code2, XCircle, User, LogOut } from 'lucide-react';\nimport SplitPane from 'react-split-pane';\nimport './Editor.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LANGUAGES = [{\n  value: 'javascript',\n  label: 'JavaScript',\n  icon: /*#__PURE__*/_jsxDEV(Code2, {\n    size: 16\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 53\n  }, this)\n}, {\n  value: 'python',\n  label: 'Python',\n  icon: /*#__PURE__*/_jsxDEV(Code2, {\n    size: 16\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 45\n  }, this)\n}, {\n  value: 'java',\n  label: 'Java',\n  icon: /*#__PURE__*/_jsxDEV(Code2, {\n    size: 16\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 41\n  }, this)\n}, {\n  value: 'cpp',\n  label: 'C++',\n  icon: /*#__PURE__*/_jsxDEV(Code2, {\n    size: 16\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 39\n  }, this)\n}, {\n  value: 'c',\n  label: 'C',\n  icon: /*#__PURE__*/_jsxDEV(Code2, {\n    size: 16\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 35\n  }, this)\n}];\nconst THEMES = [{\n  value: 'dark',\n  label: 'Dark',\n  icon: /*#__PURE__*/_jsxDEV(Moon, {\n    size: 16\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 41\n  }, this)\n}, {\n  value: 'light',\n  label: 'Light',\n  icon: /*#__PURE__*/_jsxDEV(Sun, {\n    size: 16\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 43\n  }, this)\n}];\nconst Editor = () => {\n  _s();\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('javascript');\n  const [theme, setTheme] = useState('dark');\n  const [fontSize, setFontSize] = useState(16);\n  const [output, setOutput] = useState('');\n  const [isCopied, setIsCopied] = useState(false);\n  const [input, setInput] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [selectedQid, setSelectedQid] = useState('');\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\n  const [username, setUsername] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const codeRef = useRef(null);\n  const lineRef = useRef(null); // Load questions and set from query param if present\n  useEffect(() => {\n    fetchQuestions().then(qs => {\n      setQuestions(qs);\n      const params = new URLSearchParams(window.location.search);\n      const qid = params.get('qid');\n      if (qid) {\n        setSelectedQid(qid);\n        const q = qs.find(q => q.id === qid);\n        setSelectedQuestion(q || null);\n      }\n    });\n  }, []);\n  // Check if user is logged in and get username\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedUsername = localStorage.getItem('username');\n    if (token && storedUsername) {\n      setIsLoggedIn(true);\n      setUsername(storedUsername);\n    }\n  }, []);\n  useEffect(() => {\n    if (selectedQid && questions.length) {\n      const q = questions.find(q => q.id === selectedQid);\n      setSelectedQuestion(q || null);\n    }\n  }, [selectedQid, questions]);\n  // ...existing code...\n  // Add question selector\n\n  // line numbers\n  const getLineNumbers = () => {\n    return code.split('\\n').map((_, i) => i + 1).join('\\n');\n  };\n\n  // scroll sync\n  const handleScroll = () => {\n    if (lineRef.current && codeRef.current) {\n      lineRef.current.scrollTop = codeRef.current.scrollTop;\n    }\n  };\n\n  // copy code\n  const handleCopy = () => {\n    navigator.clipboard.writeText(code);\n    setIsCopied(true);\n  };\n\n  // download code\n  const handleDownload = () => {\n    const ext = language === 'python' ? 'py' : language === 'java' ? 'java' : language === 'cpp' ? 'cpp' : language === 'c' ? 'c' : 'js';\n    const blob = new Blob([code], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `solution.${ext}`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // run code\n  const onRunCode = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const userId = localStorage.getItem('userId'); // get stored userId\n\n      const response = await fetch('http://localhost:5000/api/code/execute', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token && {\n            Authorization: `Bearer ${token}`\n          })\n        },\n        body: JSON.stringify({\n          language,\n          code,\n          input,\n          userId,\n          questionId: selectedQid\n        })\n      });\n      const data = await response.json();\n      setOutput(data.output || data.error || 'No output');\n    } catch (error) {\n      setOutput('Error connecting to server');\n      console.error(error);\n    }\n  };\n\n  // clear output\n  const onClearOutput = () => {\n    setOutput('');\n  };\n  // handle sign out\n  const handleSignOut = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('username');\n    setIsLoggedIn(false);\n    setUsername('');\n    // Optionally redirect to login page\n    window.location.href = '/login';\n  };\n\n  // get user initials for avatar\n  const getUserInitials = name => {\n    return name.split(' ').map(word => word.charAt(0)).join('').toUpperCase().slice(0, 2);\n  };\n  useEffect(() => {\n    if (isCopied) {\n      const t = setTimeout(() => setIsCopied(false), 1200);\n      return () => clearTimeout(t);\n    }\n  }, [isCopied]);\n  return /*#__PURE__*/_jsxDEV(SplitPane, {\n    split: \"vertical\",\n    minSize: 320,\n    defaultSize: 400,\n    resizerClassName: \"divider-vertical\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-panel\",\n      children: selectedQuestion ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Question \", selectedQuestion.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Input:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 12\n          }, this), \" \", selectedQuestion.input_format]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Output:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 12\n          }, this), \" \", selectedQuestion.output_format]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Sample Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"demo-box\",\n          children: selectedQuestion.demo_input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Sample Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"demo-box\",\n          children: selectedQuestion.demo_output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(SplitPane, {\n      split: \"horizontal\",\n      minSize: 150,\n      defaultSize: \"60%\",\n      resizerClassName: \"divider-horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-main-source\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-code-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: lineRef,\n            className: \"editor-lines\",\n            readOnly: true,\n            value: getLineNumbers(),\n            style: {\n              fontSize\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: codeRef,\n            className: \"editor-code\",\n            value: code,\n            onChange: e => setCode(e.target.value),\n            onScroll: handleScroll,\n            placeholder: \"// write your code...\",\n            style: {\n              fontSize\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-io-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-header\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Input (stdin)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"editor-input\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          style: {\n            minHeight: 80\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-header\",\n          style: {\n            marginTop: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Output\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon-btn clear-btn\",\n            onClick: onClearOutput,\n            title: \"Clear Output\",\n            children: /*#__PURE__*/_jsxDEV(XCircle, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-content\",\n          children: output ? /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"output-bubble\",\n            children: output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"output-placeholder\",\n            children: [/*#__PURE__*/_jsxDEV(Play, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Run to see output\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(Editor, \"myPqY17mAwSnJobmmnypixcLRUw=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","fetchQuestions","Play","Download","Copy","Sun","Moon","Code2","XCircle","User","LogOut","SplitPane","jsxDEV","_jsxDEV","Fragment","_Fragment","LANGUAGES","value","label","icon","size","fileName","_jsxFileName","lineNumber","columnNumber","THEMES","Editor","_s","code","setCode","language","setLanguage","theme","setTheme","fontSize","setFontSize","output","setOutput","isCopied","setIsCopied","input","setInput","questions","setQuestions","selectedQid","setSelectedQid","selectedQuestion","setSelectedQuestion","username","setUsername","isLoggedIn","setIsLoggedIn","codeRef","lineRef","then","qs","params","URLSearchParams","window","location","search","qid","get","q","find","id","token","localStorage","getItem","storedUsername","length","getLineNumbers","split","map","_","i","join","handleScroll","current","scrollTop","handleCopy","navigator","clipboard","writeText","handleDownload","ext","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","onRunCode","userId","response","fetch","method","headers","Authorization","JSON","stringify","questionId","data","json","error","console","onClearOutput","handleSignOut","removeItem","getUserInitials","name","word","charAt","toUpperCase","slice","t","setTimeout","clearTimeout","minSize","defaultSize","resizerClassName","children","className","question","input_format","output_format","demo_input","demo_output","ref","readOnly","style","onChange","e","target","onScroll","placeholder","minHeight","marginTop","onClick","title","_c","$RefreshReg$"],"sources":["C:/Users/LAKSHAY/Downloads/ZCODER/frontend/src/components/editor/Editor.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { fetchQuestions } from '../../utils/questions';\r\nimport { Play, Download, Copy, Sun, Moon, Code2, XCircle, User, LogOut } from 'lucide-react';\r\nimport SplitPane from 'react-split-pane';\r\nimport './Editor.css';\r\n\r\nconst LANGUAGES = [\r\n  { value: 'javascript', label: 'JavaScript', icon: <Code2 size={16} /> },\r\n  { value: 'python', label: 'Python', icon: <Code2 size={16} /> },\r\n  { value: 'java', label: 'Java', icon: <Code2 size={16} /> },\r\n  { value: 'cpp', label: 'C++', icon: <Code2 size={16} /> },\r\n  { value: 'c', label: 'C', icon: <Code2 size={16} /> },\r\n];\r\n\r\nconst THEMES = [\r\n  { value: 'dark', label: 'Dark', icon: <Moon size={16} /> },\r\n  { value: 'light', label: 'Light', icon: <Sun size={16} /> },\r\n];\r\n\r\nconst Editor = () => {\r\n  const [code, setCode] = useState('');\r\n  const [language, setLanguage] = useState('javascript');\r\n  const [theme, setTheme] = useState('dark');\r\n  const [fontSize, setFontSize] = useState(16);\r\n  const [output, setOutput] = useState('');\r\n  const [isCopied, setIsCopied] = useState(false);\r\n  const [input, setInput] = useState('');\r\n  const [questions, setQuestions] = useState([]);\r\n  const [selectedQid, setSelectedQid] = useState('');  const [selectedQuestion, setSelectedQuestion] = useState(null);\r\n  const [username, setUsername] = useState('');\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const codeRef = useRef(null);\r\n  const lineRef = useRef(null);// Load questions and set from query param if present\r\n  useEffect(() => {\r\n    fetchQuestions().then(qs => {\r\n      setQuestions(qs);\r\n      const params = new URLSearchParams(window.location.search);\r\n      const qid = params.get('qid');\r\n      if (qid) {\r\n        setSelectedQid(qid);\r\n        const q = qs.find(q => q.id === qid);\r\n        setSelectedQuestion(q || null);\r\n      }\r\n    });\r\n  }, []);\r\n  // Check if user is logged in and get username\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const storedUsername = localStorage.getItem('username');\r\n    if (token && storedUsername) {\r\n      setIsLoggedIn(true);\r\n      setUsername(storedUsername);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedQid && questions.length) {\r\n      const q = questions.find(q => q.id === selectedQid);\r\n      setSelectedQuestion(q || null);\r\n    }\r\n  }, [selectedQid, questions]);\r\n  // ...existing code...\r\n  // Add question selector\r\n\r\n  // line numbers\r\n  const getLineNumbers = () => {\r\n    return code.split('\\n').map((_, i) => i + 1).join('\\n');\r\n  };\r\n\r\n  // scroll sync\r\n  const handleScroll = () => {\r\n    if (lineRef.current && codeRef.current) {\r\n      lineRef.current.scrollTop = codeRef.current.scrollTop;\r\n    }\r\n  };\r\n\r\n  // copy code\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(code);\r\n    setIsCopied(true);\r\n  };\r\n\r\n  // download code\r\n  const handleDownload = () => {\r\n    const ext = language === 'python' ? 'py' : language === 'java' ? 'java' : language === 'cpp' ? 'cpp' : language === 'c' ? 'c' : 'js';\r\n    const blob = new Blob([code], { type: 'text/plain' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `solution.${ext}`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  // run code\r\n  const onRunCode = async () => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const userId = localStorage.getItem('userId'); // get stored userId\r\n\r\n    const response = await fetch('http://localhost:5000/api/code/execute', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...(token && { Authorization: `Bearer ${token}` }),\r\n      },\r\n      body: JSON.stringify({\r\n        language,\r\n        code,\r\n        input,\r\n        userId,\r\n        questionId: selectedQid,\r\n      }),\r\n    });\r\n\r\n    const data = await response.json();\r\n    setOutput(data.output || data.error || 'No output');\r\n  } catch (error) {\r\n    setOutput('Error connecting to server');\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n  // clear output\r\n  const onClearOutput = () => {\r\n    setOutput('');\r\n  };\r\n  // handle sign out\r\n  const handleSignOut = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('username');\r\n    setIsLoggedIn(false);\r\n    setUsername('');\r\n    // Optionally redirect to login page\r\n    window.location.href = '/login';\r\n  };\r\n\r\n  // get user initials for avatar\r\n  const getUserInitials = (name) => {\r\n    return name\r\n      .split(' ')\r\n      .map(word => word.charAt(0))\r\n      .join('')\r\n      .toUpperCase()\r\n      .slice(0, 2);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isCopied) {\r\n      const t = setTimeout(() => setIsCopied(false), 1200);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [isCopied]);\r\n\r\n  return (\r\n    <SplitPane\r\n  split=\"vertical\"\r\n  minSize={320}\r\n  defaultSize={400}\r\n  resizerClassName=\"divider-vertical\"\r\n>\r\n  {/* LEFT PANE: Question description */}\r\n  <div className=\"question-panel\">\r\n    {selectedQuestion ? (\r\n      <>\r\n        <h3>Question {selectedQuestion.id}</h3>\r\n        <p>{selectedQuestion.question}</p>\r\n        <p><strong>Input:</strong> {selectedQuestion.input_format}</p>\r\n        <p><strong>Output:</strong> {selectedQuestion.output_format}</p>\r\n        <h4>Sample Input</h4>\r\n        <pre className=\"demo-box\">{selectedQuestion.demo_input}</pre>\r\n        <h4>Sample Output</h4>\r\n        <pre className=\"demo-box\">{selectedQuestion.demo_output}</pre>\r\n      </>\r\n    ) : (\r\n      <p>Select a question</p>\r\n    )}\r\n  </div>\r\n\r\n  {/* RIGHT PANE: Editor & I/O in vertical split */}\r\n  <SplitPane\r\n    split=\"horizontal\"\r\n    minSize={150}\r\n    defaultSize=\"60%\"\r\n    resizerClassName=\"divider-horizontal\"\r\n  >\r\n    {/* Top part: Editor */}\r\n    <div className=\"editor-main-source\">\r\n      <div className=\"editor-code-area\">\r\n        <textarea\r\n          ref={lineRef}\r\n          className=\"editor-lines\"\r\n          readOnly\r\n          value={getLineNumbers()}\r\n          style={{ fontSize }}\r\n        />\r\n        <textarea\r\n          ref={codeRef}\r\n          className=\"editor-code\"\r\n          value={code}\r\n          onChange={e => setCode(e.target.value)}\r\n          onScroll={handleScroll}\r\n          placeholder=\"// write your code...\"\r\n          style={{ fontSize }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    {/* Bottom part: Input/Output */}\r\n    <div className=\"editor-io-panel\">\r\n      <div className=\"output-header\"><strong>Input (stdin)</strong></div>\r\n      <textarea\r\n        className=\"editor-input\"\r\n        value={input}\r\n        onChange={e => setInput(e.target.value)}\r\n        style={{ minHeight: 80 }}\r\n      />\r\n      <div className=\"output-header\" style={{ marginTop: 16 }}>\r\n        <strong>Output</strong>\r\n        <button className=\"icon-btn clear-btn\" onClick={onClearOutput} title=\"Clear Output\">\r\n          <XCircle size={16} />\r\n        </button>\r\n      </div>\r\n      <div className=\"output-content\">\r\n        {output ? (\r\n          <pre className=\"output-bubble\">{output}</pre>\r\n        ) : (\r\n          <div className=\"output-placeholder\">\r\n            <Play size={20} /> <span>Run to see output</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  </SplitPane>\r\n</SplitPane>\r\n\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}